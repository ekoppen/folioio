version: '3.8'

services:
  # Nginx reverse proxy - handles all incoming traffic
  nginx:
    image: nginx:alpine
    ports:
      - "7020:80"  # Different from deployment (7010)
    volumes:
      - ./nginx-simple.conf:/etc/nginx/conf.d/default.conf:ro
      - ./dist:/usr/share/nginx/html:ro
    depends_on:
      - api-server
    networks:
      - portfolio-dev-network
    restart: unless-stopped
    container_name: "portfolio-dev-nginx"

  # API Backend
  api-server:
    build: ./local-backend
    expose:
      - "3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=portfolio_dev_db
      - DATABASE_USER=postgres
      - MINIO_ENDPOINT=minio:9000
      - CORS_ORIGIN=*
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - portfolio-dev-network
    restart: unless-stopped
    container_name: "portfolio-dev-api"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5433:5432"  # Different from deployment (5432)
    env_file:
      - .env
    environment:
      - POSTGRES_DB=portfolio_dev_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./postgres-config:/docker-entrypoint-initdb.d
    networks:
      - portfolio-dev-network
    restart: unless-stopped
    container_name: "portfolio-dev-db"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d portfolio_dev_db"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 30s

  # MinIO Storage
  minio:
    image: minio/minio:latest
    env_file:
      - .env
    ports:
      - "9011:9001"  # Different from deployment (9001 -> 8010)
      - "9010:9000"  # Different from deployment (9000)
    volumes:
      - minio_dev_data:/data
    command: server /data --console-address ":9001"
    networks:
      - portfolio-dev-network
    restart: unless-stopped
    container_name: "portfolio-dev-storage"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_dev_data:
  minio_dev_data:

networks:
  portfolio-dev-network:
    driver: bridge